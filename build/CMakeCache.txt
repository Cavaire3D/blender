# This is the CMakeCache file.
# For build in directory: /workspaces/blender/build
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Use instead of the current date for reproducible builds (empty
// string disables this option)
BUILDINFO_OVERRIDE_DATE:STRING=

//Use instead of the current time for reproducible builds (empty
// string disables this option)
BUILDINFO_OVERRIDE_TIME:STRING=

//Value Computed by CMake
Blender_BINARY_DIR:STATIC=/workspaces/blender/build

//Value Computed by CMake
Blender_SOURCE_DIR:STATIC=/workspaces/blender

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:STRING=Debug

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//No help, variable specified on the command line.
CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/clang++

//LLVM archiver
CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/lib/llvm-10/bin/llvm-ar

//Generate index for LLVM archive
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/lib/llvm-10/bin/llvm-ranlib

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

CMAKE_CXX_FLAGS_RELEASE:STRING=-O2 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//No help, variable specified on the command line.
CMAKE_C_COMPILER:FILEPATH=/usr/bin/clang

//LLVM archiver
CMAKE_C_COMPILER_AR:FILEPATH=/usr/lib/llvm-10/bin/llvm-ar

//Generate index for LLVM archive
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/lib/llvm-10/bin/llvm-ranlib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

CMAKE_C_FLAGS_RELEASE:STRING=-O2 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=/usr/bin/llvm-dlltool

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//No help, variable specified on the command line.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE

//default install path
CMAKE_INSTALL_PREFIX:PATH=/workspaces/blender/build/bin

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=Blender

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/readelf

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Use instead of the standard packagename (empty string disables
// this option)
CPACK_OVERRIDE_PACKAGENAME:STRING=

//CUDA architectures to build binaries for
CYCLES_CUDA_BINARIES_ARCH:STRING=sm_30;sm_35;sm_37;sm_50;sm_52;sm_60;sm_61;sm_70;sm_75;sm_86;compute_75

//AMD HIP architectures to build binaries for
CYCLES_HIP_BINARIES_ARCH:STRING=gfx900;gfx906;gfx90c;gfx902;gfx1010;gfx1011;gfx1012;gfx1030;gfx1031;gfx1032;gfx1034;gfx1035;gfx1100;gfx1101;gfx1102

//oneAPI Intel GPU architectures to build binaries for
CYCLES_ONEAPI_SPIR64_GEN_DEVICES:STRING=acm-g10

//oneAPI targets to build AOT binaries for
CYCLES_ONEAPI_SYCL_TARGETS:STRING=spir64;spir64_gen

//Path to the OptiX SDK root directory. When set, this path will
// be used at runtime to compile OptiX kernels.
CYCLES_RUNTIME_OPTIX_ROOT_DIR:PATH=

//Run regression tests on the specified device types (CPU CUDA
// OPTIX HIP)
CYCLES_TEST_DEVICES:STRING=CPU

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Path to a file.
JPEG_INCLUDE_DIR:PATH=JPEG_INCLUDE_DIR-NOTFOUND

//Path to a library.
JPEG_LIBRARY_DEBUG:FILEPATH=JPEG_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
JPEG_LIBRARY_RELEASE:FILEPATH=JPEG_LIBRARY_RELEASE-NOTFOUND

//Link with LLVM static libraries
LLVM_STATIC:BOOL=OFF

//Path to the OptiX SDK root directory, for building Cycles OptiX
// kernels.
OPTIX_ROOT_DIR:PATH=

//Run given CMake script as the last step of CMake configuration
POSTCONFIGURE_SCRIPT:FILEPATH=

//Run given CMake script after installation process
POSTINSTALL_SCRIPT:FILEPATH=

//Path to the include directory of the NumPy module
PYTHON_NUMPY_INCLUDE_DIRS:PATH=

//Path to python site-packages or dist-packages containing 'numpy'
// module
PYTHON_NUMPY_PATH:PATH=

//Path to python site-packages or dist-packages containing 'requests'
// module
PYTHON_REQUESTS_PATH:PATH=

//Path to python site-packages or dist-packages containing 'zstandard'
// module
PYTHON_ZSTANDARD_PATH:PATH=

//Python executable to run unit tests
TEST_PYTHON_EXE:PATH=

//Enable Alembic Support
WITH_ALEMBIC:BOOL=ON

//Call abort() when raising an assertion through BLI_assert()
WITH_ASSERT_ABORT:BOOL=ON

//Build with blenders audio library (only disable if you know what
// you're doing!)
WITH_AUDASPACE:BOOL=ON

//Build blender (disable to build only the blender player)
WITH_BLENDER:BOOL=ON

//Build "blender-thumbnailer" thumbnail extraction utility
WITH_BLENDER_THUMBNAILER:BOOL=ON

//Enable features depending on boost
WITH_BOOST:BOOL=ON

//Include extra build details (only disable for development & faster
// builds)
WITH_BUILDINFO:BOOL=ON

//Enable Bullet (Physics Engine)
WITH_BULLET:BOOL=ON

WITH_CLANG:BOOL=ON

//Use Clang Tidy to analyze the source code (only enable for development
// on Linux using Clang, or Windows using the Visual Studio IDE)
WITH_CLANG_TIDY:BOOL=OFF

//Enable Blenders own AVI file support (raw/jpeg)
WITH_CODEC_AVI:BOOL=ON

//Enable FFMPeg Support (http://ffmpeg.org)
WITH_CODEC_FFMPEG:BOOL=ON

//Enable libsndfile Support (http://www.mega-nerd.com/libsndfile)
WITH_CODEC_SNDFILE:BOOL=ON

//Build and link against address sanitizer (only for Debug & RelWithDebInfo
// targets).
WITH_COMPILER_ASAN:BOOL=OFF

//Use ccache to improve rebuild times (Works with Ninja, Makefiles
// and Xcode)
WITH_COMPILER_CCACHE:BOOL=OFF

//Make paths in macros like __FILE__ relative to top level source
// and build directories.
WITH_COMPILER_SHORT_FILE_MACRO:BOOL=ON

//Enable the tile based CPU nodal compositor
WITH_COMPOSITOR_CPU:BOOL=ON

//Enable SIMD instruction if they're detected on the host machine
WITH_CPU_SIMD:BOOL=ON

//Dynamically load CUDA libraries at runtime (for developers, makes
// cuda-gdb work)
WITH_CUDA_DYNLOAD:BOOL=ON

//Use native C++11 ABI of compiler
WITH_CXX11_ABI:BOOL=ON

//Enable GuardedAlloc for C++ memory allocation tracking (only
// enable for development)
WITH_CXX_GUARDEDALLOC:BOOL=OFF

//Enable Cycles Render Engine
WITH_CYCLES:BOOL=ON

//Build Cycles NVIDIA CUDA binaries
WITH_CYCLES_CUDA_BINARIES:BOOL=OFF

//Build cubins one after another (useful on machines with limited
// RAM)
WITH_CYCLES_CUDA_BUILD_SERIAL:BOOL=OFF

//Build Cycles with options useful for debugging (e.g., MIS)
WITH_CYCLES_DEBUG:BOOL=OFF

//Build Cycles with additional asserts for detecting NaNs and invalid
// values
WITH_CYCLES_DEBUG_NAN:BOOL=OFF

//Enable Cycles NVIDIA CUDA compute support
WITH_CYCLES_DEVICE_CUDA:BOOL=ON

//Enable Cycles AMD HIP support
WITH_CYCLES_DEVICE_HIP:BOOL=ON

//Enable Cycles oneAPI compute support
WITH_CYCLES_DEVICE_ONEAPI:BOOL=OFF

//Enable Cycles NVIDIA OptiX support
WITH_CYCLES_DEVICE_OPTIX:BOOL=ON

//Build Cycles with Embree support
WITH_CYCLES_EMBREE:BOOL=ON

//Build Cycles AMD HIP binaries
WITH_CYCLES_HIP_BINARIES:BOOL=OFF

//Build Cycles Hydra render delegate
WITH_CYCLES_HYDRA_RENDER_DELEGATE:BOOL=OFF

//Build Cycles kernels with address sanitizer when WITH_COMPILER_ASAN
// is on, even if it's very slow
WITH_CYCLES_KERNEL_ASAN:BOOL=OFF

//Build Cycles with logging support
WITH_CYCLES_LOGGING:BOOL=ON

//Build Cycles with native kernel only (which fits current CPU,
// use for development only)
WITH_CYCLES_NATIVE_ONLY:BOOL=OFF

//Enable Ahead-Of-Time compilation for Cycles oneAPI device
WITH_CYCLES_ONEAPI_BINARIES:BOOL=OFF

//Build Cycles with OpenShadingLanguage support
WITH_CYCLES_OSL:BOOL=ON

//Build Cycles with path guiding support
WITH_CYCLES_PATH_GUIDING:BOOL=ON

//Build Cycles standalone application
WITH_CYCLES_STANDALONE:BOOL=OFF

//Build Cycles standalone with GUI
WITH_CYCLES_STANDALONE_GUI:BOOL=OFF

//Create a manual page (Unix manpage)
WITH_DOC_MANPAGE:BOOL=OFF

//Enable Draco mesh compression Python module (used for glTF)
WITH_DRACO:BOOL=ON

//Add extra debug capabilities to Draw Manager
WITH_DRAW_DEBUG:BOOL=OFF

//Enable FFTW3 support (Used for smoke, ocean sim, and audio effects)
WITH_FFTW3:BOOL=ON

//Enable Freestyle (advanced edges rendering)
WITH_FREESTYLE:BOOL=ON

//Enable debugging output for the GHOST library
WITH_GHOST_DEBUG:BOOL=OFF

//Enable building Blender against SDL for windowing rather than
// the native APIs
WITH_GHOST_SDL:BOOL=OFF

//Enable building Blender against Wayland for windowing
WITH_GHOST_WAYLAND:BOOL=ON

//The application ID used for Blender (use default when an empty
// string), this can be used to differentiate Blender instances
// by version or branch for example.
WITH_GHOST_WAYLAND_APP_ID:STRING=

//Optionally build with DBUS support (used for Cursor themes).
// May hang on startup systems where DBUS is not used.
WITH_GHOST_WAYLAND_DBUS:BOOL=OFF

//Enable runtime dynamic WAYLAND libraries loading
WITH_GHOST_WAYLAND_DYNLOAD:BOOL=ON

//Optionally build with LibDecor window decorations
WITH_GHOST_WAYLAND_LIBDECOR:BOOL=ON

//Enable building Blender against X11 for windowing
WITH_GHOST_X11:BOOL=ON

//Enable drag'n'drop support on X11 using XDND protocol
WITH_GHOST_XDND:BOOL=ON

//Enable features depending on GMP (Exact Boolean)
WITH_GMP:BOOL=ON

//Shader builder is a developer option enabling linting on GLSL
// during compilation
WITH_GPU_BUILDTIME_SHADER_BUILDER:BOOL=OFF

//Enable GTest unit testing
WITH_GTESTS:BOOL=OFF

//Enable features relying on Libharu (Grease pencil PDF export)
WITH_HARU:BOOL=ON

//Build without graphical support (renderfarm, server mode only)
WITH_HEADLESS:BOOL=OFF

//Enable ITASC IK solver (only disable for development & for incompatible
// C++ compilers)
WITH_IK_ITASC:BOOL=ON

//Enable Legacy IK solver (only disable for development)
WITH_IK_SOLVER:BOOL=ON

//Enable CINEON and DPX Image Support
WITH_IMAGE_CINEON:BOOL=ON

//Enable DDS Image Support
WITH_IMAGE_DDS:BOOL=ON

//Enable HDR Image Support
WITH_IMAGE_HDR:BOOL=ON

//Enable OpenEXR Support (http://www.openexr.com)
WITH_IMAGE_OPENEXR:BOOL=ON

//Enable OpenJpeg Support (http://www.openjpeg.org)
WITH_IMAGE_OPENJPEG:BOOL=ON

//Enable LibTIFF Support
WITH_IMAGE_TIFF:BOOL=ON

//Enable WebP Image Support
WITH_IMAGE_WEBP:BOOL=ON

//Enable NDOF input devices (SpaceNavigator and friends)
WITH_INPUT_NDOF:BOOL=ON

//Install redistributable runtime, otherwise install into CMAKE_INSTALL_PREFIX
WITH_INSTALL_PORTABLE:BOOL=ON

//Enable I18N (International fonts and text)
WITH_INTERNATIONAL:BOOL=ON

//Enable grease-pencil file format IO (*.svg, *.pdf)
WITH_IO_GPENCIL:BOOL=ON

//Enable STL 3D file format support (*.stl)
WITH_IO_STL:BOOL=ON

//Enable Wavefront-OBJ 3D file format support (*.obj)
WITH_IO_WAVEFRONT_OBJ:BOOL=ON

//Enable JACK Support (http://www.jackaudio.org)
WITH_JACK:BOOL=ON

//Enable runtime dynamic JACK libraries loading
WITH_JACK_DYNLOAD:BOOL=OFF

//Enable Libmv structure from motion library
WITH_LIBMV:BOOL=ON

//Enable fixed-size schur specializations.
WITH_LIBMV_SCHUR_SPECIALIZATIONS:BOOL=ON

//Use ld.mold linker which is usually faster than ld.gold & ld.lld.
WITH_LINKER_MOLD:BOOL=OFF

WITH_LLVM:BOOL=ON

//Enable best LZMA compression, (used for pointcache)
WITH_LZMA:BOOL=ON

//Enable fast LZO compression (used for pointcache)
WITH_LZO:BOOL=ON

//Enable malloc replacement (http://www.canonware.com/jemalloc)
WITH_MEM_JEMALLOC:BOOL=ON

//Enable extended valgrind support for better reporting
WITH_MEM_VALGRIND:BOOL=OFF

//Enable Mantaflow Fluid Simulation Framework
WITH_MOD_FLUID:BOOL=ON

//Enable Ocean Modifier
WITH_MOD_OCEANSIM:BOOL=ON

//Enable Remesh Modifier
WITH_MOD_REMESH:BOOL=ON

//Enable usage of NanoVDB data structure for rendering on the GPU
WITH_NANOVDB:BOOL=ON

//Enable OpenAL Support (http://www.openal.org)
WITH_OPENAL:BOOL=ON

//Enable OpenCollada Support (http://www.opencollada.org)
WITH_OPENCOLLADA:BOOL=ON

//Enable OpenColorIO color management
WITH_OPENCOLORIO:BOOL=ON

//When off limits visibility of the opengl headers to just bf_gpu
// and gawain (temporary option for development purposes)
WITH_OPENGL:BOOL=ON

//Enable OpenGL UI drawing related unit testing (Experimental)
WITH_OPENGL_DRAW_TESTS:BOOL=OFF

//Enable OpenGL render related unit testing (Experimental)
WITH_OPENGL_RENDER_TESTS:BOOL=OFF

//Enable the OpenImageDenoise compositing node
WITH_OPENIMAGEDENOISE:BOOL=ON

//Enable OpenImageIO Support (http://www.openimageio.org)
WITH_OPENIMAGEIO:BOOL=ON

//Enable OpenMP (has to be supported by the compiler)
WITH_OPENMP:BOOL=ON

//Link OpenMP statically (only used by the release environment)
WITH_OPENMP_STATIC:BOOL=OFF

//Enable OpenSubdiv for surface subdivision
WITH_OPENSUBDIV:BOOL=ON

//Enable features relying on OpenVDB
WITH_OPENVDB:BOOL=ON

//Assume OpenVDB library has been compiled with version 3 ABI compatibility
WITH_OPENVDB_3_ABI_COMPATIBLE:BOOL=OFF

//Enable blosc compression for OpenVDB, only enable if OpenVDB
// was built with blosc support
WITH_OPENVDB_BLOSC:BOOL=ON

//Enable features relying on potrace
WITH_POTRACE:BOOL=ON

//Enable PugiXML support (Used for OpenImageIO, Grease Pencil SVG
// export)
WITH_PUGIXML:BOOL=ON

//Enable PulseAudio for audio support on Linux
WITH_PULSEAUDIO:BOOL=ON

//Enable runtime dynamic PulseAudio libraries loading
WITH_PULSEAUDIO_DYNLOAD:BOOL=OFF

//Enable Embedded Python API  (only disable for development)
WITH_PYTHON:BOOL=ON

//Copy system python into the blender install folder
WITH_PYTHON_INSTALL:BOOL=ON

//Copy system NumPy into the blender install folder
WITH_PYTHON_INSTALL_NUMPY:BOOL=ON

//Copy system requests into the blender install folder
WITH_PYTHON_INSTALL_REQUESTS:BOOL=ON

//Copy zstandard into the blender install folder
WITH_PYTHON_INSTALL_ZSTANDARD:BOOL=ON

//Enable building as a python module which runs without a user
// interface, like running regular blender in background mode (experimental,
// only enable for development), installs to PYTHON_SITE_PACKAGES
// (or CMAKE_INSTALL_PREFIX if WITH_INSTALL_PORTABLE is enabled).
WITH_PYTHON_MODULE:BOOL=OFF

//Include NumPy in Blender (used by Audaspace and Mantaflow)
WITH_PYTHON_NUMPY:BOOL=ON

//Enable internal API error checking to track invalid data to prevent
// crash on access (at the expense of some efficiency, only enable
// for development).
WITH_PYTHON_SAFETY:BOOL=OFF

//Disables execution of scripts within blend files by default
WITH_PYTHON_SECURITY:BOOL=ON

//Build with quadriflow remesher support
WITH_QUADRIFLOW:BOOL=ON

//Enable SDL for sound
WITH_SDL:BOOL=ON

//Enable runtime dynamic SDL libraries loading
WITH_SDL_DYNLOAD:BOOL=OFF

//Try to link with static libraries, as much as possible, to make
// blender more portable across distributions
WITH_STATIC_LIBS:BOOL=OFF

//When requirements for a build option are not met, error instead
// of disabling the option
WITH_STRICT_BUILD_OPTIONS:BOOL=OFF

//Build with external audaspace library installed on the system
// (only enable if you know what you're doing!)
WITH_SYSTEM_AUDASPACE:BOOL=OFF

//Use the systems bullet library (currently unsupported due to
// missing features in upstream!)
WITH_SYSTEM_BULLET:BOOL=OFF

//Use the systems Eigen3 library
WITH_SYSTEM_EIGEN3:BOOL=OFF

//Use the freetype library provided by the operating system
WITH_SYSTEM_FREETYPE:BOOL=OFF

//Use system-wide Gflags instead of a bundled one
WITH_SYSTEM_GFLAGS:BOOL=OFF

//Use system-wide Glog instead of a bundled one
WITH_SYSTEM_GLOG:BOOL=OFF

//Use the system LZO library
WITH_SYSTEM_LZO:BOOL=OFF

//Enable multithreading. TBB is also required for features such
// as Cycles, OpenVDB and USD
WITH_TBB:BOOL=ON

//Enable unity build for modules that support it to improve compile
// times
WITH_UNITY_BUILD:BOOL=ON

//Enable Universal Scene Description (USD) Support
WITH_USD:BOOL=ON

//Enable Vulkan as graphics backend (only for development)
WITH_VULKAN_BACKEND:BOOL=OFF

//Enable X11 video mode switching
WITH_X11_XF86VMODE:BOOL=ON

//Enable X11 XWayland cursor warping workaround
WITH_X11_XFIXES:BOOL=ON

//Enable X11 Xinput (tablet support and unicode input)
WITH_X11_XINPUT:BOOL=ON

//Enable VR features through the OpenXR specification
WITH_XR_OPENXR:BOOL=ON


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: BUILDINFO_OVERRIDE_DATE
BUILDINFO_OVERRIDE_DATE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: BUILDINFO_OVERRIDE_TIME
BUILDINFO_OVERRIDE_TIME-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/workspaces/blender/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=16
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/workspaces/blender
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.16
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_OVERRIDE_PACKAGENAME
CPACK_OVERRIDE_PACKAGENAME-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_CUDA_BINARIES_ARCH
CYCLES_CUDA_BINARIES_ARCH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_HIP_BINARIES_ARCH
CYCLES_HIP_BINARIES_ARCH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_ONEAPI_SPIR64_GEN_DEVICES
CYCLES_ONEAPI_SPIR64_GEN_DEVICES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_ONEAPI_SYCL_TARGETS
CYCLES_ONEAPI_SYCL_TARGETS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CYCLES_RUNTIME_OPTIX_ROOT_DIR
CYCLES_RUNTIME_OPTIX_ROOT_DIR-ADVANCED:INTERNAL=1
EXECUTABLE_OUTPUT_PATH:INTERNAL=/workspaces/blender/build/bin
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v2.25.1()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have symbol malloc_stats
HAVE_MALLOC_STATS_H:INTERNAL=1
//ADVANCED property for variable: JPEG_LIBRARY_DEBUG
JPEG_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: JPEG_LIBRARY_RELEASE
JPEG_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
LIBRARY_OUTPUT_PATH:INTERNAL=/workspaces/blender/build/lib
//ADVANCED property for variable: LLVM_STATIC
LLVM_STATIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPTIX_ROOT_DIR
OPTIX_ROOT_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: POSTCONFIGURE_SCRIPT
POSTCONFIGURE_SCRIPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: POSTINSTALL_SCRIPT
POSTINSTALL_SCRIPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_NUMPY_INCLUDE_DIRS
PYTHON_NUMPY_INCLUDE_DIRS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_NUMPY_PATH
PYTHON_NUMPY_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_REQUESTS_PATH
PYTHON_REQUESTS_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_ZSTANDARD_PATH
PYTHON_ZSTANDARD_PATH-ADVANCED:INTERNAL=1
//Test SUPPORT_NEON_BUILD
SUPPORT_NEON_BUILD:INTERNAL=
//Test SUPPORT_SSE2_BUILD
SUPPORT_SSE2_BUILD:INTERNAL=1
//Result of TRY_COMPILE
SUPPORT_SSE2_BUILD_COMPILED:INTERNAL=TRUE
//Result of TRY_RUN
SUPPORT_SSE2_BUILD_EXITCODE:INTERNAL=0
//Test SUPPORT_SSE_BUILD
SUPPORT_SSE_BUILD:INTERNAL=1
//Result of TRY_COMPILE
SUPPORT_SSE_BUILD_COMPILED:INTERNAL=TRUE
//Result of TRY_RUN
SUPPORT_SSE_BUILD_EXITCODE:INTERNAL=0
TESTS_OUTPUT_DIR:INTERNAL=/workspaces/blender/build/bin/tests/
//ADVANCED property for variable: TEST_PYTHON_EXE
TEST_PYTHON_EXE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_ASSERT_ABORT
WITH_ASSERT_ABORT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_AUDASPACE
WITH_AUDASPACE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_BLENDER
WITH_BLENDER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CLANG_TIDY
WITH_CLANG_TIDY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_ASAN
WITH_COMPILER_ASAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_CCACHE
WITH_COMPILER_CCACHE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_COMPILER_SHORT_FILE_MACRO
WITH_COMPILER_SHORT_FILE_MACRO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CPU_SIMD
WITH_CPU_SIMD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CUDA_DYNLOAD
WITH_CUDA_DYNLOAD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CXX11_ABI
WITH_CXX11_ABI-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CXX_GUARDEDALLOC
WITH_CXX_GUARDEDALLOC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_CUDA_BUILD_SERIAL
WITH_CYCLES_CUDA_BUILD_SERIAL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_DEBUG_NAN
WITH_CYCLES_DEBUG_NAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_DEVICE_CUDA
WITH_CYCLES_DEVICE_CUDA-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_DEVICE_HIP
WITH_CYCLES_DEVICE_HIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_KERNEL_ASAN
WITH_CYCLES_KERNEL_ASAN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_LOGGING
WITH_CYCLES_LOGGING-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_CYCLES_NATIVE_ONLY
WITH_CYCLES_NATIVE_ONLY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_DRAW_DEBUG
WITH_DRAW_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_DEBUG
WITH_GHOST_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_SDL
WITH_GHOST_SDL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_WAYLAND
WITH_GHOST_WAYLAND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_WAYLAND_APP_ID
WITH_GHOST_WAYLAND_APP_ID-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_WAYLAND_DBUS
WITH_GHOST_WAYLAND_DBUS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_WAYLAND_DYNLOAD
WITH_GHOST_WAYLAND_DYNLOAD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_WAYLAND_LIBDECOR
WITH_GHOST_WAYLAND_LIBDECOR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GHOST_X11
WITH_GHOST_X11-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_GPU_BUILDTIME_SHADER_BUILDER
WITH_GPU_BUILDTIME_SHADER_BUILDER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_HEADLESS
WITH_HEADLESS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_LIBMV_SCHUR_SPECIALIZATIONS
WITH_LIBMV_SCHUR_SPECIALIZATIONS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_LINKER_MOLD
WITH_LINKER_MOLD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_MEM_JEMALLOC
WITH_MEM_JEMALLOC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_MEM_VALGRIND
WITH_MEM_VALGRIND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_OPENGL
WITH_OPENGL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_OPENMP_STATIC
WITH_OPENMP_STATIC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_OPENVDB_3_ABI_COMPATIBLE
WITH_OPENVDB_3_ABI_COMPATIBLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_PYTHON
WITH_PYTHON-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_PYTHON_SAFETY
WITH_PYTHON_SAFETY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_PYTHON_SECURITY
WITH_PYTHON_SECURITY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_AUDASPACE
WITH_SYSTEM_AUDASPACE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_BULLET
WITH_SYSTEM_BULLET-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_GFLAGS
WITH_SYSTEM_GFLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_SYSTEM_GLOG
WITH_SYSTEM_GLOG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_UNITY_BUILD
WITH_UNITY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: WITH_VULKAN_BACKEND
WITH_VULKAN_BACKEND-ADVANCED:INTERNAL=1

